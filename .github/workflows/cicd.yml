name: CI/CD Pipeline

permissions:
  contents: write
  pull-requests: write
  actions: write

on:
  push:
    branches:
      - main
      - feature/dockerize
  
  pull_request:
    branches:
      - main
      - feature/dockerize

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker compose -f flaskapp/docker-compose.yml build

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build  # Ensures the test job runs only after the build job succeeds
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set BASE_URL environment variable
      run: |
        echo "BASE_URL=https://9ac2-203-99-184-187.ngrok-free.app" >> $GITHUB_ENV

    - name: Run API tests with pytest
      run: |
        pip install -r requirements.txt
        pytest | tee test-results.txt

        - name: Read test results
        id: read_results
        run: |
          echo "::set-output name=results::$(cat test-results.txt)"
    
    - name: Send test results via email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: "zaema.khurram@emumba.com"
        password: "hzle msey pbno jwkl"
        subject: Test Results from GitHub Actions
        body: ${{ steps.read_results.outputs.results }}
        to: zaema.khurram@emumba.com
        from: zaema.khurram@emumba.com

  merge:
    name: Merge Pull Request
    runs-on: ubuntu-latest
    needs: test  # Ensures the merge job runs only after tests pass
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Merge pull request
      run: |
        pr_number=${{ github.event.pull_request.number }}
        gh pr merge $pr_number --merge

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [test, merge]  # Ensures deployment occurs only after tests pass and merge is successful
    if: |
      github.ref == 'refs/heads/main' && github.event_name == 'push' || 
      github.event_name == 'pull_request' && github.event.pull_request.merged == true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker compose

    - name: Stop and Remove Existing Containers
      run: |
        docker compose down || true
        docker compose rm -f

    - name: Build Docker images
      run: docker compose build --no-cache

    - name: Run Docker Compose
      run: docker compose up -d --force-recreate --build

    - name: Wait for services to be ready
      run: |
        sleep 10
        curl -f https://9ac2-203-99-184-187.ngrok-free.app/ || exit 1

name: CI/CD Pipeline

permissions:
  contents: write
  pull-requests: write
  actions: write

on:
  push:
    branches:
      - main
      - feature/dockerize
      - test/workflow
  
  pull_request:
    branches:
      - main
      - feature/dockerize
      - test/workflow

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      working-directory: ./flaskapp 
      run: |
        docker build -t zaema-dot/flaskapp-web:${{ github.sha }} .

    - name: Push Docker image to registry
      working-directory: ./flaskapp 
      run: |
        docker push zaema-dot/flaskapp-web:${{ github.sha }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build  # Ensures the test job runs only after the build job succeeds
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set BASE_URL environment variable
      run: |
        echo "BASE_URL=https://9ac2-203-99-184-187.ngrok-free.app" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        pip install -r flaskapp/requirements.txt    
        
    - name: Run API tests with pytest
      run: |
        pytest flaskapp/test.py --html=report.html
    
    - name: Send Email with Test Report
      uses: hilarion5/send-mail@v1
      with:
        smtp-server: smtp.gmail.com
        smtp-port: 465
        smtp-secure: true
        from-email: zaema.khurram@emumba.com
        to-email: zaema.khurram@emumba.com
        username: zaema.khurram@emumba.com
        password: hzle msey pbno jwkl
        subject: Test Results
        body: |
          Test results are attached.
        content_type: text/html
        attachments: report.html

  merge:
    name: Merge Pull Request
    runs-on: ubuntu-latest
    needs: test  # Ensures the merge job runs only after tests pass
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Merge pull request
      run: |
        pr_number=${{ github.event.pull_request.number }}
        gh pr merge $pr_number --merge

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [test]  # Ensures deployment occurs only after tests pass
    if: >
      (github.event_name == 'push' && github.ref == 'refs/heads/feature/dockerize') || 
      (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'feature/dockerize' && github.event.pull_request.merged == true)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Pull latest Docker image
      run: |
        docker pull zaema-dot/flaskapp-web:${{ github.sha }}

    - name: Stop and Remove Existing Containers
      run: |
        docker compose down || true
        docker compose rm -f

    - name: Run Docker Compose
      run: docker compose up -d

    - name: Wait for services to be ready
      run: |
        sleep 10
        curl -f https://9ac2-203-99-184-187.ngrok-free.app/ || exit 1

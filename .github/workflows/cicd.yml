name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feature/dockerize'  # Run on push to dockerize branch
      - 'main'  # Run on push to the main branch (including merges)
  pull_request:
    branches:
      - 'main'  # Run on pull request to the main branch
      - 'feature/dockerize'  # Run on pull request to the dockerize branch

jobs:
  build-and-test:
    name: Build, Run Docker, and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker compose -f flaskapp/docker-compose.yml build

    - name: Start Docker containers
      run: |
        docker compose -f flaskapp/docker-compose.yml up -d  # Start in detached mode

    - name: Wait for service to be ready
      run: |
        # Adjust this sleep duration based on how long your app takes to start
        sleep 10

    # - name: Set BASE_URL environment variable
    #   run: |
    #     echo "BASE_URL=https://b770-2407-d000-1a-f17a-a7ee-a0fc-be8b-82f9.ngrok-free.app" >> $GITHUB_ENV

    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null &&
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list &&
        sudo apt-get update && sudo apt-get install ngrok

    - name: Start ngrok
      id: ngrok
      run: |
        ngrok http 172.18.0.3:5000 --log=stdout > ngrok.log &
        sleep 5  # Give ngrok some time to initialize

    - name: Fetch ngrok URL
      id: fetch-ngrok-url
      run: |
        export NGROK_URL=$(curl --silent --show-error http://localhost:4040/api/tunnels | jq -r .tunnels[0].public_url)
        echo "NGROK_URL=${NGROK_URL}" >> $GITHUB_ENV


    - name: Run API tests with pytest
      run: |
        pip install -r flaskapp/requirements.txt
        pytest flaskapp/test.py --html=report.html

    - name: Send Email
      uses: hilarion5/send-mail@v1
      with:
        smtp-server: smtp.gmail.com
        smtp-port: 465
        smtp-secure: true
        from-email: zaema.khurram@emumba.com
        to-email: zaema.khurram@emumba.com
        username: zaema.khurram@emumba.com
        password: hzle msey pbno jwkl
        subject: Test Results
        body: |
          Test results are attached.
        content_type: text/html
        attachments: report.html

    - name: Stop Docker containers
      run: |
        docker compose -f flaskapp/docker-compose.yml down  # Stop and remove containers
